#!/bin/bash --login

VARCHIVE_PATH=$(
    cd $(dirname "$0")
    pwd
)
cd "$VARCHIVE_PATH"

VARCHIVE_INSTALL_CLOSE_FLAG_PATH="/tmp/varchive_install_close.flag"

rm $VARCHIVE_INSTALL_CLOSE_FLAG_PATH 2>&1 >/dev/null

handleExit() {
    echo $1 >$VARCHIVE_INSTALL_CLOSE_FLAG_PATH
    exit $1
}

trap 'handleExit 1' EXIT

if [ -f successfully_installed.flag ]; then
    echo "Successfully installed before, If you want to reinstall, just remove $VARCHIVE_PATH/successfully_installed.flag"
    handleExit 0
fi

installIfNotExist() {
    cmd="$1"
    if ! which "$cmd"; then
        export HOMEBREW_NO_AUTO_UPDATE=1
        if ! brew install "$cmd"; then
            echo "Error: Cannot install $cmd" 1>&2
            handleExit 1
        fi
    fi
}

installNpmIfNotExist() {
    if ! which npm; then
        installIfNotExist nvm
        mkdir -p ~/.nvm
        export NVM_DIR="$HOME/.nvm"
        [ -s "/usr/local/opt/nvm/nvm.sh" ] && \. "/usr/local/opt/nvm/nvm.sh"                                       # This loads nvm
        [ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/usr/local/opt/nvm/etc/bash_completion.d/nvm" # This loads nvm bash_completion
        nvm install 23.1.0
        ln -s "$(which npm)" /usr/local/bin/npm
        ln -s "$(which node)" /usr/local/bin/node
    fi
}

main() {

    if ! which 'brew'; then
        if ! /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"; then
            echo "Error: Cannot install brew" 1>&2
            handleExit 1
        fi
    fi

    installNpmIfNotExist
    installIfNotExist "ffmpeg"
    installIfNotExist "yt-dlp"

    cd spa
    if ! npm install; then
        echo "Error: npm install failed!" 1>&2
        handleExit 1
    fi
    cd -

    if ! which 'python3.9'; then
        if ! brew install python@3.9; then
            echo "Error: Cannot install python@3.9" 1>&2
            handleExit 1
        fi
    fi

    cd server/src
    if ! python3.9 -m pip install -r requirements.txt; then
        echo "Error: Pythone cannot install all lib in the requirements.txt" 1>&2
        handleExit 1
    fi
    cd -

    cd server/pem
    if ! ./genCA; then
        echo "Error: Root Certificate install failed!" 1>&2
        handleExit 1
    fi
    cd -

    if ! osascript -e 'tell application "System Events" to get the name of every login item' | grep varchive-start; then
        # Ask the user for input
        read -p "Do you want to add the varchive-start to your 「Login items」? ([yes]/no):" response
        # Check the user's response
        if [ -z "$response" ] || [[ "$response" == "yes" || "$response" == "YES" ]]; then
            osascript -e "tell application \"System Events\" to make new login item at end with properties {path:\"$VARCHIVE_PATH/shell/varchive-start\", hidden:false}"
        elif [[ "$response" == "no" || "$response" == "NO" ]]; then
            echo
        else
            echo
        fi
    fi

    echo
    echo
    echo
    echo "Install successfully!"
    echo "To start varchive by running:"
    echo "$VARCHIVE_PATH/shell/varchive-start"

    touch successfully_installed.flag
    handleExit 0
}

main
